#!/usr/bin/env python

import sys, tempfile, random, re
from Bio import SeqIO, AlignIO, Seq, SeqRecord, Phylo
from Bio.Align import MultipleSeqAlignment
from Bio.SeqRecord import SeqRecord
import os, time
import collections
import StringIO
import csv
import scipy.stats

em_A={}
em_A_val1={}
em_A_val2={}
em_A_val3={}
em_B={}
em_B_val1={}
em_B_val2={}
em_B_val3={}
em_B_var={}
em_C={}

with open("1_nsaf.tsv", "rb") as read1:
	r1=csv.reader(read1, delimiter='\t')
	for line in r1:
		#em_A[line[0]]=line[1]
		em_A_val1[line[0]]=line[1]
		em_A_val2[line[0]]=line[2]
		em_A_val3[line[0]]=line[3]
with open("2_nsaf.tsv", "rb") as read2:
	r2=csv.reader(read2, delimiter='\t')
	for line in r2:
		#em_B[line[0]]=line[1]
		em_B_val1[line[0]]=line[1]
		em_B_val2[line[0]]=line[2]
		em_B_val3[line[0]]=line[3]

mergeEm={}

sharedProt=set(em_A_val1.keys()) & set(em_B_val1.keys())
mergeEm=dict.fromkeys(sharedProt,0)

list1=[]
#list1.append(['Protein','Run1 val1', 'Run1 val2', 'Run1 val3', 'Run2 val1', 'Run2 val2', 'Run2 val3'])

for key in mergeEm:
	list1.append([key, em_A_val1[key], em_A_val2[key], em_A_val3[key], em_B_val1[key], em_B_val2[key], em_B_val3[key]])

print len(list1)
with open ('1vs2_nsaf.tsv', 'wb') as w:
	wr=csv.writer(w, delimiter='\t')
	wr.writerows(list1)
i=0	
j=[]
#for item in list1:
	#print list1[i][1]
#	a=[float(list1[i][1]), float(list1[i][2]), float(list1[i][3])]
#	b=[float(list1[i][4]), float(list1[i][5]), float(list1[i][6])]
#	x=scipy.stats.ttest_ind(a, b, axis=0, equal_var=False)
	#print x[1]
#	j.append([list1[i][0], x[1]])
#	i+=1

#print j

#with open ('tes1.tsv', 'wb') as w:
#	wr=csv.writer(w, delimiter='\t')
#	wr.writerows(j)

read1.close()
read2.close()
w.close()
